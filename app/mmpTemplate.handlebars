<header id="subheader">
  <div class="container">
  <div class="row">
    <div class="col-sm-6">
    <ol class="breadcrumb">
      <li class="active">Action Items</li>
    </ol>
    {{#if mraOutputs.assessment.targetLevel}}<span class="collapse-link visible-xs xs-expand-link" data-toggle="collapse" data-target="#subheader-collapseable" aria-expanded="false" aria-controls="subheader-collapseable"><span class="glyphicon glyphicon-triangle-bottom"></span></span>{{/if}}
    </div>
    <div class="col-sm-6 hidden-xs">
      <div class="row">
      <div class="col-xs-12 meta">
                Target MRL: {{mraOutputs.assessment.targetLevel}} <span class="text-divider">|</span>Target Date: {{mraOutputs.assessment.targetDate}}
              </div>
      </div>

    </div>
  </div>



  <div class="collapse"  id="subheader-collapseable">
  <div class="row visible-xs">
    <div class="col-xs-12">
    Target MRL: {{mraOutputs.assessment.targetLevel}}<span class="text-divider">|</span>Target Date: {{mraOutputs.assessment.targetDate}}
    </div>
  </div>
  </div>
  </div>
</header>





<div class="container" id="mainContent">
	<div class="row">
	<div class="col-xs-12">
	<div class="pull-right"><a href="javascript:void(0)" id="exportCSV" class="btn-link"><span class="glyphicon glyphicon-export"></span> Export</a></div>
	</div>
	</div>

  <div id="csvExportDiv" class='col-md-3'>
    <span style="display: none;" id="actionPlanCSVString">{{mraOutputs.answersCSV}}</span>
    <!-- <button id="exportCSV" class='btn btn-primary pull-right' style='margin:10px'>Export</button> -->
  </div>

{{#each mraOutputs.actionPlan}}
	<div class="actionItem">
	<p><b>{{threadName}}</b> / {{subThreadName}} / {{mrlLevel}}</p>
  <h5><a href onclick='$("#functionToCall").val("getQuestionnairePageFromNavigation");$("#navQuestionId").val({{questionId}})' ng-click='run()'>{{questionText}}</a></h5>

  <div class="row">
    <div class="col-xs-6">
    	<dl>
        <dt>Reason:</dt>
        <dd>{{reason}}</dd>
        <dt>Action</dt>
        <dd>{{whatAction}}</dd>
        <dt>Assumptions: </dt>
        <dd>{{assumptions}}</dd>
        <dt>Notes</dt>
        <dd>{{notes}}</dd>
      </dl>
    </div>

    <div class="col-xs-6">
      <dl>
        {{#if completionDate}}
      		<dt>Completion Date:</dt>
      		<dd>{{completionDate}}</dd>
        {{/if}}
    		<!-- <dt>Cost Risk: </dt>
    		<dd>None</dd>
    		<dt>Schedule Risk</dt>
    		<dd>None</dd>
    		<dt>Technical Risk</dt>
    		<dd>none</dd> -->
        <dt>Risks:</dt>
        <dd ng-show='"{{costRisk}}"=="1"'>Cost Risk</dd>
        <dd ng-show='"{{scheduleRisk}}"=="1"'>Schedule Risk</dd>
        <dd ng-show='"{{technicalRisk}}"=="1"'>Technical Risk</dd>
    		<dt>Team Members</dt>
        {{#each actionPerson}}
          <dd style='list-style-type:none'>{{name}}</dd>
        {{/each}}
    		<dt>Attachements</dt>
        {{#each attachments}}
    		  <dd><a href="javascript:void(0)" onclick='$("#functionToCall").val("downloadAttachment");$("#attachmentId").val("{{id}}")' ng-click='run()'>Operaiton-inspection-Q2_2017.pdf</a></dd>
        {{/each}}
    	</dl>
    </div>
  </div>

	</div>
{{/each}}

</div>

<input type='hidden' id='inputPage' value='mmpPage'>
<input type='hidden' id='navQuestionId' value='0'>
<input type='hidden' id='attachmentId' value=''/>

<script>
  $( document ).ready(function() {
    var exportButton = document.getElementById('exportCSV');
    exportButton.addEventListener('click', function() {
      downloadCSV();
    });
  });

  function downloadCSV() {
    var csv = generateCSVString();

    var hiddenElement = document.createElement('a');
    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);
    hiddenElement.target = '_blank';
    hiddenElement.download = 'MRA_action_items.csv';
    hiddenElement.style.display = 'none';
    document.querySelector('#csvExportDiv').appendChild(hiddenElement);
    hiddenElement.click();
  }

  function generateCSVString() {
    var csv = (document.getElementById('actionPlanCSVString')).textContent;

    csv = JSON.parse(csv);

    for (var i=0; i < csv.length; i++) {
      csv[i] = csv[i].join(',');
    }

    csv = csv.join("");

    return csv;
  }

</script>
